"use strict";(self.webpackChunkbear_react_carousel_doc=self.webpackChunkbear_react_carousel_doc||[]).push([[744],{6017:(e,a,t)=>{t.r(a),t.d(a,{assets:()=>s,contentTitle:()=>i,default:()=>p,frontMatter:()=>o,metadata:()=>l,toc:()=>d});var r=t(7462),n=(t(7294),t(3905));const o={title:"Migration to 4.x version"},i=void 0,l={unversionedId:"faq/migration-to-4",id:"faq/migration-to-4",title:"Migration to 4.x version",description:"From version 0 to version 4, there have been some changes. In addition to splitting from business logic, in order to make parameters and scope clearer, you need to change them accordingly",source:"@site/docs/faq/migration-to-4.md",sourceDirName:"faq",slug:"/faq/migration-to-4",permalink:"/docs/faq/migration-to-4",draft:!1,editUrl:"https://github.com/bear-react-carousel/bear-react-carousel.github.io/blob/main/docs/faq/migration-to-4.md",tags:[],version:"current",frontMatter:{title:"Migration to 4.x version"},sidebar:"tutorialSidebar",previous:{title:"Start NextJS",permalink:"/docs/faq/started-nextjs"},next:{title:"Props Try",permalink:"/docs/props-try"}},s={},d=[{value:"BearSlideItem",id:"bearslideitem",level:2},{value:"PageContent",id:"pagecontent",level:2},{value:"Height",id:"height",level:2},{value:"Static Height",id:"static-height",level:3},{value:"AspectRatio",id:"aspectratio",level:3}],c={toc:d},m="wrapper";function p(e){let{components:a,...t}=e;return(0,n.kt)(m,(0,r.Z)({},c,t,{components:a,mdxType:"MDXLayout"}),(0,n.kt)("p",null,"From version 0 to version 4, there have been some changes. In addition to splitting from business logic, in order to make parameters and scope clearer, you need to change them accordingly"),(0,n.kt)("h2",{id:"bearslideitem"},"BearSlideItem"),(0,n.kt)("p",null,"Splitting into different components is to better distinguish props"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-tsx"},"import {BearSlideItem} from 'bear-react-carousel';\n\nconst data = infos.map(row => {\n    return {\n        key: row.id,\n        children: <BearSlideItem as=\"card\">  {/* or image **/}\n            {row.name}\n        </BearSlideItem>\n    }\n});\n")),(0,n.kt)("p",null,"Change to"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-tsx"},"import {BearSlideCard, BearSlideImage} from 'bear-react-carousel';\n\nconst data = infos.map(row => {\n    return {\n        key: row.id,\n        children: <BearSlideCard>   {/* or BearSlideImage **/}\n            {row.name}\n        </BearSlideCard>\n    }\n});\n")),(0,n.kt)("p",null,"As for the parameters, you can refer to ",(0,n.kt)("a",{parentName:"p",href:"/docs/components/bear-slide-card"},"BearSlideCard")," / ",(0,n.kt)("a",{parentName:"p",href:"/docs/components/bear-slide-image"},"BearSlideImage")),(0,n.kt)("h2",{id:"pagecontent"},"PageContent"),(0,n.kt)("p",null,"Old in BearSlideItem, since this should be a page, not an item"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-tsx"},"import BearCarousel, {BearSlideItem} from 'bear-react-carousel';\n\nconst data = infos.map(row => {\n    return {\n        key: row.id,\n        pageContent: <>{row.name}</>,\n        children: <BearSlideItem as=\"card\">  {/* or image **/}\n            {row.name}\n        </BearSlideItem>\n    }\n});\n")),(0,n.kt)("p",null,"Change to"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-tsx"},"import BearCarousel, {BearSlideItem} from 'bear-react-carousel';\n\nconst data = infos.map(row => {\n    return {\n        key: row.id,\n        children: <BearSlideCard>   {/* or BearSlideImage **/}\n            {row.name}\n        </BearSlideCard>\n    }\n});\n\n<BearCarousel\n    data={data}\n    isEnablePageContent\n    renderPagination={(pageTotal: number) => {\n        return foodImages.map(row => {\n            return <CustomPage key={row.id}>{row.title}</CustomPage>;\n        });\n    }}\n/>\n")),(0,n.kt)("p",null,"If you need a reference case, you can get it from ",(0,n.kt)("a",{parentName:"p",href:"/docs/examples/auto-play-progress"},"auto-play-progress")),(0,n.kt)("h2",{id:"height"},"Height"),(0,n.kt)("p",null,"This attribute should be one of the two, so I merged it into the same attribute"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre"},"staticHeight -> height\naspectRatio -> height\n")),(0,n.kt)("h3",{id:"static-height"},"Static Height"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-tsx"},'<BearCarousel\n    data={data}\n    staticHeight="200px"\n/>\n')),(0,n.kt)("p",null,"change to"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-tsx"},'<BearCarousel\n    data={data}\n    height="200px"\n/>\n')),(0,n.kt)("h3",{id:"aspectratio"},"AspectRatio"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-tsx"},"<BearCarousel\n    data={data}\n    aspectRatio={{widthRatio: 32, heightRatio: 9}}\n/>\n")),(0,n.kt)("p",null,"change to"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-tsx"},"<BearCarousel\n    data={data}\n    height={{widthRatio: 32, heightRatio: 9}}\n/>\n")))}p.isMDXComponent=!0}}]);