"use strict";(self.webpackChunkbear_react_carousel_doc=self.webpackChunkbear_react_carousel_doc||[]).push([[1477],{10:e=>{e.exports=JSON.parse('{"blogPosts":[{"id":"Swiper carousel loop","metadata":{"permalink":"/blog/Swiper carousel loop","editUrl":"https://github.com/bear-react-carousel/bear-react-carousel.github.io/blob/blog/blog/2023-06-07-migration-to-4.md","source":"@site/blog/2023-06-07-migration-to-4.md","title":"Swiper carousel design and how loop","description":"Research carousel mechanism","date":"2023-06-07T00:00:00.000Z","formattedDate":"June 7, 2023","tags":[{"label":"swiper","permalink":"/blog/tags/swiper"}],"readingTime":2.505,"hasTruncateMarker":false,"authors":[{"name":"Imagine Chiu","title":"Front End Engineer @ Bearests","url":"https://github.com/imagine10255","imageURL":"https://github.com/imagine10255.png","key":"imaginechiu"}],"frontMatter":{"slug":"Swiper carousel loop","title":"Swiper carousel design and how loop","authors":"imaginechiu","tags":["swiper"]}},"content":"Research carousel mechanism\\n\\n![swiper banner](https://miro.medium.com/v2/resize:fit:1400/format:webp/1*hUGGgfksWrUCK5VEVeUcfw@2x.png)\\n\\nToday, while researching whether a dynamic Swiper carousel would affect dynamic text in Loop mode, I noticed that the approach in the latest version of Swiper is somewhat different.\\n\\nI\u2019ve been directly observing the elements as they move.\\n\\n\\n## Normal State\\n![Normal State](https://miro.medium.com/v2/resize:fit:2400/1*7qXF3NzsA0FnSKqU8k4sfQ.gif)\\n\\nYou can see that under normal circumstances, the method is similar to the general approach of implementing a carousel.\\n\\n## Need Loop State\\n![Need Loop State](https://miro.medium.com/v2/resize:fit:2400/1*eHaFFqud-Mb3GVHVqEJLTw.gif)\\n\\nWe can see from the information in \u2018aria-label\u2019 that the active item is moved to the first position, then the sequence continues. For every move, we only need to activate the transition-duration animation. After the movement is completed, the animation is deactivated, and movement control should be locked until the completion of the movement.\\n\\nactually not\\n\\n```\\n// active 5 (is last)\\n1 / 5 (-1496 * 0)\\n2 / 5 (-1496 * 1)\\n3 / 5 (-1496 * 2)\\n4 / 5 (-1496 * 3)\\n5 / 5 (-1496 * 4)\\n\\n// click next, active 1 \\n// then duration    0ms, transform: -4488px,\\n// then duration: 900ms, transform: -5984px, \\n// move\\n2 / 5 (0)\\n3 / 5 (-1496px)\\n4 / 5 (-2992px)\\n5 / 5 (-4488px)\\n1 / 5 (-5984px)\\n// then duration 0ms\\n\\n\\n// click next, active 2\\n// then duration    0ms, transform: -4488px,\\n// then duration: 900ms, transform: -5984px,\\n3 / 5 (0)\\n4 / 5 (-1496px)\\n5 / 5 (-2992px)\\n1 / 5 (-4488px)\\n2 / 5 (-5984px)\\n// then duration 0ms\\n```\\nThe speed is too fast to see the flaws\\n\\n```ts\\ncontainerEl.style.transform = `translate3d(${-1904}px, 0px, 0px)`;\\ncontainerEl.style.transitionDuration = \'0ms\';\\nsetTimeout(() => {\\n    containerEl.style.transform = `translate3d(${-3808}px, 0px, 0px)`;\\n    containerEl.style.transitionDuration = `${this._configurator.setting.moveTime}ms`;\\n}, 0);\\n```\\n\\nSo make up to move the next target sequence to the last one, then jump to the previous position, and then move to the last one\\n\\nThe sorting has changed, so it becomes the judgment whether it is the last or the first, and it is judged by order\\n\\n---\\n\\n## What problem can be solved\\n\\n\\nI originally thought that to loop, one must copy and then instantly replace and reset. By doing so, we can avoid issues related to additional copying and the fact that objects are not identical. Each time, a new object needs to be created.\\n\\nBecause changing the array order requires re-Render\\n\\nIt is worth thinking that if the order of the array is actually changed, you can consider whether to use css order to achieve the same effect\\n\\n\\n## What problems will you encounter\\n\\n![Loop mode, total item 5, slidePreView 3](https://miro.medium.com/v2/resize:fit:2400/1*djAzNr7EbSSCExVz82fd2g.gif)\\n\\n- When the number of Swiper\u2019s Loop is not divisible, it seems that the mobile computing has not been handled well.\\n\\n- When sliding manually, or when the number is insufficient, or moving from the first page to the last page, there will be some challenges\\n\\nAs of now, the use of Clone might still be more advantageous than disadvantageous.\\n\\n## Ref\\n\\n[Check Not Clone Branch](https://github.com/imagine10255/bear-react-carousel/tree/test/230610/loop-no-copy-slide/imagine10255)\\n\\n[Swiper carousel design and how loop](https://medium.com/@imaginechiu/swiper-carousel-design-and-how-loop-88159a88f4ae)"}]}')}}]);